export interface Language {
  code: string
  name: string
  nativeName: string
}

export const languages: Language[] = [
  { code: "en", name: "English", nativeName: "English" },
  { code: "cs", name: "Czech", nativeName: "Čeština" },
  { code: "de", name: "German", nativeName: "Deutsch" },
  { code: "es", name: "Spanish", nativeName: "Español" },
  { code: "fa", name: "Persian", nativeName: "فارسی" },
  { code: "fr", name: "French", nativeName: "Français" },
  { code: "hi", name: "Hindi", nativeName: "हिन्दी" },
  { code: "he", name: "Hebrew", nativeName: "עברית" },
  { code: "id", name: "Indonesian", nativeName: "Bahasa Indonesia" },
  { code: "it", name: "Italian", nativeName: "Italiano" },
  { code: "pl", name: "Polish", nativeName: "Polski" },
  { code: "pt", name: "Portuguese", nativeName: "Português" },
  { code: "pt-br", name: "Brazilian Portuguese", nativeName: "Português do Brasil" },
  { code: "ru", name: "Russian", nativeName: "русский" },
  { code: "sv", name: "Swedish", nativeName: "svenska" },
  { code: "tr", name: "Turkish", nativeName: "Türkçe" },
  { code: "th", name: "Thai", nativeName: "ไทย" }, 
  { code: "uk", name: "Ukrainian", nativeName: "Українська" },
  { code: "vi", name: "Vietnamese", nativeName: "Tiếng Việt" },
  { code: "zh", name: "Simplified Chinese", nativeName: "简体中文" },
]

export interface Translation {
  tagline: string
  phoneAnalogy: string
  dontDoThis: string
  insteadTryThis: string
  noteText: (receiverName: string) => string
  politenessText: string
  sameGoesFor: string
  areYouAround: string
  quickQuestion: string
  gotASec: string
  justAskQuestion: string
  ifBrusque: (greeting: string) => string
  forExample: string
  exampleLong: (greeting: string) => string
  exampleMedium: (greeting: string) => string
  exampleShort: (greeting: string) => string
  asyncText: (greeting: string) => string
  everyoneHappy: string
  halfSerious: string
  madLink: string
  statusWarning: (greeting: string) => string
  createYourOwn: string
  openSource: string
  anotherProject: string
  dumbProject: string
  by: string
  availableIn: string
  enterGreeting: string
  generate: string
  advancedOptions: string
  senderNameLabel: string
  senderNamePlaceholder: string
  senderNameHelp: string
  receiverNameLabel: string
  receiverNamePlaceholder: string
  receiverNameHelp: string
  yourCustomLink: string
  previewPage: string
  tryPopular: string
  languageLabel: string
  etc: string
  chatWaiting: string
  chatQuestion: string
  chatAnswer: string
  chatGreetingQuestion: (greeting: string) => string
  chatQuickAnswer: string
  chatThanks: string
  chatAcknowledge: string
}

export const translations: Record<string, Translation> = {
  en: {
    tagline: "please don't say just {greeting} in chat",
    phoneAnalogy: "Imagine calling someone on the phone, going {greeting}! then putting them on hold... 🤦‍♀️",
    dontDoThis: "Don't do this",
    insteadTryThis: "Instead try this",
    noteText: (receiverName) =>
      `Note that Keith could have got his answer minutes sooner, and needn't have kept ${receiverName} waiting. In fact, ${receiverName} could have started thinking about the question right away!`,
    politenessText:
      "People who do this are generally trying to be polite by not jumping right into the request, like one would in person or on the phone - and that's great! But it's 2025 and chat is neither of those things. For most people, typing is much slower than talking. So despite best intentions, you're actually just making the other person wait for you to phrase your question, which is lost productivity (and kinda annoying).",
    sameGoesFor: "The same goes for:",
    areYouAround: "{greeting}, are you around?",
    quickQuestion: "{greeting} sophie - quick question.",
    gotASec: "You got a sec?",
    justAskQuestion: "Just ask the question! 😫",
    ifBrusque: (greeting) =>
      `If you feel it's a bit brusque to simply say "${greeting}" and ask the question, you can still preface your message with as many pleasantries as you see fit.`,
    forExample: "For example:",
    exampleLong: (greeting) => `${greeting} there! Hope you're well. I'm after the latest deck, when you get a sec :)`,
    exampleMedium: (greeting) => `${greeting} man, what's up? also, any idea when that thing's due?`,
    exampleShort: (greeting) => `${greeting}, if you're not busy, could you update those NFRs?`,
    asyncText: (greeting) =>
      `It may seem trivial, but asking your question before getting that initial salutatory reply also allows for asynchronous communication. If the other party is away, and you leave before they come back, they can still answer your question, instead of just staring at a "${greeting}" and wondering what they missed.`,
    everyoneHappy: "When done right - everyone's happy! 🎉",
    halfSerious: "This is kinda only half serious 😬 so please don't get",
    madLink: "mad",
    statusWarning: (greeting) =>
      `That said, if you use this sites URL as someone's status/bio, be prepared to be ignored if you only say "${greeting}!"`,
    createYourOwn: "Create your own at",
    openSource: "Open Source on",
    anotherProject: "another",
    dumbProject: "dumb project",
    by: "by",
    availableIn: "This site is available in:",
    enterGreeting: "Enter a greeting to discourage:",
    generate: "Generate",
    advancedOptions: "Advanced Options",
    senderNameLabel: "Sender Name (optional)",
    senderNamePlaceholder: "e.g., Dawn",
    senderNameHelp: 'The person sending messages in the "Instead try this" example',
    receiverNameLabel: "Receiver Name (optional)",
    receiverNamePlaceholder: "e.g., Kuber",
    receiverNameHelp: "The person receiving messages in the examples",
    yourCustomLink: "Your custom link:",
    previewPage: "Preview your page →",
    tryPopular: "Try these popular greetings:",
    languageLabel: "Language (optional)",
    etc: "etc.",
    chatWaiting: "...?",
    chatQuestion: "what time was that thing again?",
    chatAnswer: "oh - 3:30 mate",
    chatGreetingQuestion: (greeting) => `${greeting}! What time was that thing?`,
    chatQuickAnswer: "hey, 3:30",
    chatThanks: "Ta - seeya then!",
    chatAcknowledge: "👌 np",
  },
  cs: {
    tagline: "prosím neříkej jen {greeting} v chatu",
    phoneAnalogy: "Představte si, že někomu zavoláte, řeknete {greeting}! a pak ho necháte čekat... 🤦‍♀️",
    dontDoThis: "Nedělejte to",
    insteadTryThis: "Místo toho zkuste toto",
    noteText: (receiverName) =>
      `Všimněte si, že Keith mohl dostat odpověď o minuty dříve a nemusel nechat ${receiverName} čekat. Ve skutečnosti mohl ${receiverName} začít přemýšlet o otázce hned!`,
    politenessText:
      "Lidé, kteří to dělají, se obvykle snaží být zdvořilí tím, že neskočí rovnou do žádosti, jako by to bylo osobně nebo po telefonu - a to je skvělé! Ale je rok 2025 a chat není ani jedno z toho. Pro většinu lidí je psaní mnohem pomalejší než mluvení. Takže navzdory nejlepším úmyslům ve skutečnosti jen nutíte druhou osobu čekat, než formulujete svou otázku, což je ztráta produktivity (a trochu otravné).",
    sameGoesFor: "Totéž platí pro:",
    areYouAround: "{greeting}, jsi tady?",
    quickQuestion: "{greeting} sophie - rychlá otázka.",
    gotASec: "Máš chvilku?",
    justAskQuestion: "Prostě se zeptej! 😫",
    ifBrusque: (greeting) =>
      `Pokud se vám zdá trochu hrubé jen říct "${greeting}" a zeptat se, stále můžete svou zprávu uvést tolika zdvořilostmi, kolik chcete.`,
    forExample: "Například:",
    exampleLong: (greeting) =>
      `${greeting}! Doufám, že se máš dobře. Potřebuji nejnovější prezentaci, až budeš mít čas :)`,
    exampleMedium: (greeting) => `${greeting}, co je nového? také, víš náhodou, kdy je to splatné?`,
    exampleShort: (greeting) => `${greeting}, pokud nejsi zaneprázdněn, mohl bys aktualizovat ty NFR?`,
    asyncText: (greeting) =>
      `Může se to zdát triviální, ale položení otázky před získáním úvodní odpovědi také umožňuje asynchronní komunikaci. Pokud je druhá strana pryč a vy odejdete dříve, než se vrátí, stále může odpovědět na vaši otázku, místo aby jen zírala na "${greeting}" a přemýšlela, co jí uniklo.`,
    everyoneHappy: "Když se to udělá správně - všichni jsou šťastní! 🎉",
    halfSerious: "Tohle je jen napůl vážně 😬 takže prosím nebuďte",
    madLink: "naštvaní",
    statusWarning: (greeting) =>
      `Nicméně, pokud použijete URL této stránky jako něčí status/bio, buďte připraveni být ignorováni, pokud řeknete jen "${greeting}!"`,
    createYourOwn: "Vytvořte si vlastní na",
    openSource: "Open Source na",
    anotherProject: "další",
    dumbProject: "hloupý projekt",
    by: "od",
    availableIn: "Tato stránka je k dispozici v:",
    enterGreeting: "Zadejte pozdrav, který chcete odradit:",
    generate: "Generovat",
    advancedOptions: "Pokročilé možnosti",
    senderNameLabel: "Jméno odesílatele (volitelné)",
    senderNamePlaceholder: "např. Dawn",
    senderNameHelp: 'Osoba odesílající zprávy v příkladu "Místo toho zkuste toto"',
    receiverNameLabel: "Jméno příjemce (volitelné)",
    receiverNamePlaceholder: "např. Kuber",
    receiverNameHelp: "Osoba přijímající zprávy v příkladech",
    yourCustomLink: "Váš vlastní odkaz:",
    previewPage: "Náhled stránky →",
    tryPopular: "Vyzkoušejte tyto oblíbené pozdravy:",
    languageLabel: "Jazyk (volitelný)",
    etc: "atd.",
    chatWaiting: "...?",
    chatQuestion: "v kolik hodin to bylo?",
    chatAnswer: "oh - 3:30 kámo",
    chatGreetingQuestion: (greeting) => `${greeting}! V kolik hodin to bylo?`,
    chatQuickAnswer: "ahoj, 3:30",
    chatThanks: "Díky - uvidíme se!",
    chatAcknowledge: "👌 v pohodě",
  },
  de: {
    tagline: "bitte sag nicht nur {greeting} im Chat",
    phoneAnalogy:
      "Stell dir vor, du rufst jemanden an, sagst {greeting}! und legst ihn dann in die Warteschleife... 🤦‍♀️",
    dontDoThis: "Mach das nicht",
    insteadTryThis: "Versuche stattdessen dies",
    noteText: (receiverName) =>
      `Beachte, dass Keith seine Antwort Minuten früher hätte bekommen können und ${receiverName} nicht hätte warten lassen müssen. Tatsächlich hätte ${receiverName} sofort über die Frage nachdenken können!`,
    politenessText:
      "Menschen, die das tun, versuchen im Allgemeinen höflich zu sein, indem sie nicht direkt zur Anfrage springen, wie man es persönlich oder am Telefon tun würde - und das ist großartig! Aber es ist 2025 und Chat ist keines von beiden. Für die meisten Menschen ist Tippen viel langsamer als Sprechen. Trotz bester Absichten lässt du die andere Person also tatsächlich nur warten, bis du deine Frage formuliert hast, was Produktivitätsverlust bedeutet (und irgendwie nervig ist).",
    sameGoesFor: "Das Gleiche gilt für:",
    areYouAround: "{greeting}, bist du da?",
    quickQuestion: "{greeting} sophie - kurze Frage.",
    gotASec: "Hast du kurz Zeit?",
    justAskQuestion: "Stell einfach die Frage! 😫",
    ifBrusque: (greeting) =>
      `Wenn es dir zu schroff erscheint, einfach "${greeting}" zu sagen und die Frage zu stellen, kannst du deine Nachricht trotzdem mit so vielen Höflichkeiten einleiten, wie du möchtest.`,
    forExample: "Zum Beispiel:",
    exampleLong: (greeting) =>
      `${greeting}! Ich hoffe, es geht dir gut. Ich brauche die neueste Präsentation, wenn du Zeit hast :)`,
    exampleMedium: (greeting) => `${greeting}, was gibt's? Weißt du zufällig, wann das fällig ist?`,
    exampleShort: (greeting) => `${greeting}, wenn du nicht beschäftigt bist, könntest du die NFRs aktualisieren?`,
    asyncText: (greeting) =>
      `Es mag trivial erscheinen, aber deine Frage zu stellen, bevor du die erste Begrüßungsantwort erhältst, ermöglicht auch asynchrone Kommunikation. Wenn die andere Partei weg ist und du gehst, bevor sie zurückkommt, kann sie trotzdem deine Frage beantworten, anstatt nur auf ein "${greeting}" zu starren und sich zu fragen, was sie verpasst hat.`,
    everyoneHappy: "Wenn es richtig gemacht wird - sind alle glücklich! 🎉",
    halfSerious: "Das ist nur halb ernst gemeint 😬 also bitte werd nicht",
    madLink: "sauer",
    statusWarning: (greeting) =>
      `Wenn du diese URL als jemandes Status/Bio verwendest, sei darauf vorbereitet, ignoriert zu werden, wenn du nur "${greeting}!" sagst`,
    createYourOwn: "Erstelle deine eigene auf",
    openSource: "Open Source auf",
    anotherProject: "ein weiteres",
    dumbProject: "dummes Projekt",
    by: "von",
    availableIn: "Diese Seite ist verfügbar in:",
    enterGreeting: "Gib eine Begrüßung ein, die du verhindern möchtest:",
    generate: "Generieren",
    advancedOptions: "Erweiterte Optionen",
    senderNameLabel: "Absendername (optional)",
    senderNamePlaceholder: "z.B. Dawn",
    senderNameHelp: 'Die Person, die Nachrichten im Beispiel "Versuche stattdessen dies" sendet',
    receiverNameLabel: "Empfängername (optional)",
    receiverNamePlaceholder: "z.B. Kuber",
    receiverNameHelp: "Die Person, die Nachrichten in den Beispielen empfängt",
    yourCustomLink: "Dein individueller Link:",
    previewPage: "Vorschau deiner Seite →",
    tryPopular: "Probiere diese beliebten Begrüßungen:",
    languageLabel: "Sprache (optional)",
    etc: "usw.",
    chatWaiting: "...?",
    chatQuestion: "um wie viel Uhr war das nochmal?",
    chatAnswer: "oh - 3:30 Kumpel",
    chatGreetingQuestion: (greeting) => `${greeting}! Um wie viel Uhr war das?`,
    chatQuickAnswer: "hey, 3:30",
    chatThanks: "Danke - bis dann!",
    chatAcknowledge: "👌 kein Problem",
  },
  es: {
    tagline: "por favor no digas solo {greeting} en el chat",
    phoneAnalogy: "Imagina llamar a alguien por teléfono, decir {greeting}! y luego ponerlo en espera... 🤦‍♀️",
    dontDoThis: "No hagas esto",
    insteadTryThis: "En su lugar, intenta esto",
    noteText: (receiverName) =>
      `Ten en cuenta que Keith podría haber obtenido su respuesta minutos antes y no habría tenido que hacer esperar a ${receiverName}. De hecho, ¡${receiverName} podría haber comenzado a pensar en la pregunta de inmediato!`,
    politenessText:
      "Las personas que hacen esto generalmente intentan ser educadas al no ir directamente a la solicitud, como lo harían en persona o por teléfono, ¡y eso es genial! Pero es 2025 y el chat no es ninguna de esas cosas. Para la mayoría de las personas, escribir es mucho más lento que hablar. Así que, a pesar de las mejores intenciones, en realidad solo estás haciendo que la otra persona espere a que formules tu pregunta, lo cual es una pérdida de productividad (y un poco molesto).",
    sameGoesFor: "Lo mismo ocurre con:",
    areYouAround: "{greeting}, ¿estás por ahí?",
    quickQuestion: "{greeting} sophie - pregunta rápida.",
    gotASec: "¿Tienes un segundo?",
    justAskQuestion: "¡Solo haz la pregunta! 😫",
    ifBrusque: (greeting) =>
      `Si sientes que es a bit brusco, solo decir "${greeting}" y hacer la pregunta, aún puedes prefijar tu mensaje con tantas cortesías como consideres apropiadas.`,
    forExample: "Por ejemplo:",
    exampleLong: (greeting) =>
      `¡${greeting}! Espero que estés bien. Necesito la última presentación, cuando tengas un momento :)`,
    exampleMedium: (greeting) => `${greeting}, ¿qué tal? además, ¿tienes idea de cuándo vence eso?`,
    exampleShort: (greeting) => `${greeting}, si no estás ocupado, ¿podrías actualizar esos NFRs?`,
    asyncText: (greeting) =>
      `Puede parecer trivial, pero hacer tu pregunta antes de obtener esa respuesta de saludo inicial también permite la comunicación asíncrona. Si la otra parte está ausente y te vas antes de que regrese, aún puede responder tu pregunta, en lugar de simplemente mirar un "${greeting}" y preguntarse qué se perdió.`,
    everyoneHappy: "Cuando se hace bien, ¡todos están felices! 🎉",
    halfSerious: "Esto es solo medio en serio 😬 así que por favor no te",
    madLink: "enojes",
    statusWarning: (greeting) =>
      `Dicho esto, si usas la URL de este sitio como el estado/biografía de alguien, prepárate para ser ignorado si solo dices "${greeting}!"`,
    createYourOwn: "Crea el tuyo en",
    openSource: "Código abierto en",
    anotherProject: "otro",
    dumbProject: "proyecto tonto",
    by: "por",
    availableIn: "Este sitio está disponible en:",
    enterGreeting: "Ingresa un saludo para desalentar:",
    generate: "Generar",
    advancedOptions: "Opciones avanzadas",
    senderNameLabel: "Nombre del remitente (opcional)",
    senderNamePlaceholder: "ej. Dawn",
    senderNameHelp: 'La persona que envía mensajes en el ejemplo "En su lugar, intenta esto"',
    receiverNameLabel: "Nombre del destinatario (opcional)",
    receiverNamePlaceholder: "ej. Kuber",
    receiverNameHelp: "La persona que recibe mensajes en los ejemplos",
    yourCustomLink: "Tu enlace personalizado:",
    previewPage: "Vista previa de tu página →",
    tryPopular: "Prueba estos saludos populares:",
    languageLabel: "Idioma (opcional)",
    etc: "etc.",
    chatWaiting: "...?",
    chatQuestion: "¿a qué hora era eso otra vez?",
    chatAnswer: "oh - 3:30 amigo",
    chatGreetingQuestion: (greeting) => `¡${greeting}! ¿A qué hora era eso?`,
    chatQuickAnswer: "hey, 3:30",
    chatThanks: "Gracias - ¡nos vemos!",
    chatAcknowledge: "👌 de nada",
  },
  fa: {
    tagline: "لطفاً فقط {greeting} در چت نگو",
    phoneAnalogy: "تصور کن با کسی تماس بگیری، {greeting}! بگویی و بعد او را در انتظار بگذاری... 🤦‍♀️",
    dontDoThis: "این کار را نکن",
    insteadTryThis: "در عوض این را امتحان کن",
    noteText: (receiverName) =>
      `توجه داشته باش که کیت می‌توانست دقایقی زودتر پاسخش را بگیرد و نیازی نبود ${receiverName} را منتظر نگه دارد. در واقع، ${receiverName} می‌توانست فوراً شروع به فکر کردن درباره سوال کند!`,
    politenessText:
      "افرادی که این کار را می‌کنند معمولاً سعی می‌کنند با نپریدن مستقیم به درخواست، مثل حضوری یا تلفنی، مؤدب باشند - و این عالی است! اما سال ۲۰۲۵ است و چت هیچ‌کدام از اینها نیست. برای اکثر مردم، تایپ کردن خیلی کندتر از صحبت کردن است. بنابراین علی‌رغم بهترین نیت‌ها، شما در واقع فقط باعث می‌شوید طرف مقابل منتظر بماند تا سوالتان را بیان کنید, که این باعث از دست رفتن بهره‌وری می‌شود (و کمی آزاردهنده است).",
    sameGoesFor: "همین موضوع برای اینها هم صدق می‌کند:",
    areYouAround: "{greeting}، اونجایی؟",
    quickQuestion: "{greeting} سوفی - یه سوال سریع.",
    gotASec: "یه لحظه وقت داری؟",
    justAskQuestion: "فقط سوالت رو بپرس! 😫",
    ifBrusque: (greeting) =>
      `اگر احساس می‌کنی که فقط گفتن "${greeting}" و پرسیدن سوال کمی بی‌ادبانه است، همچنان می‌توانی پیامت را با هر تعداد تعارفی که مناسب می‌دانی شروع کنی.`,
    forExample: "برای مثال:",
    exampleLong: (greeting) => `${greeting}! امیدوارم حالت خوب باشه. به آخرین ارائه نیاز دارم، وقتی فرصت کردی :)`,
    exampleMedium: (greeting) => `${greeting}، چه خبر؟ راستی، می‌دونی اون چیز کی موعدشه؟`,
    exampleShort: (greeting) => `${greeting}، اگه سرت شلوغ نیست، می‌تونی اون NFRها رو آپدیت کنی؟`,
    asyncText: (greeting) =>
      `ممکن است بی‌اهمیت به نظر برسد، اما پرسیدن سوالت قبل از دریافت آن پاسخ احوال‌پرسی اولیه، امکان ارتباط ناهمزمان را نیز فراهم می‌کند. اگر طرف مقابل غایب باشد و تو قبل از بازگشتش بروی، او همچنان می‌تواند به سوالت پاسخ دهد، به جای اینکه فقط به یک "${greeting}" خیره شود و تعجب کند که چه چیزی را از دست داده.`,
    everyoneHappy: "وقتی درست انجام بشه - همه خوشحالن! 🎉",
    halfSerious: "این فقط نیمه جدی است 😬 پس لطفاً",
    madLink: "عصبانی نشو",
    statusWarning: (greeting) =>
      `با این حال, اگر از URL این سایت به عنوان وضعیت/بیوگرافی کسی استفاده می‌کنید, آماده باشید که نادیده گرفته شوید اگر فقط "${greeting}!" بگویید`,
    createYourOwn: "خودت بساز در",
    openSource: "متن‌باز در",
    anotherProject: "یکی دیگه از",
    dumbProject: "پروژه‌های احمقانه",
    by: "توسط",
    availableIn: "این سایت در این زبان‌ها موجود است:",
    enterGreeting: "یک احوال‌پرسی برای منع کردن وارد کن:",
    generate: "تولید",
    advancedOptions: "گزینه‌های پیشرفته",
    senderNameLabel: "نام فرستنده (اختیاری)",
    senderNamePlaceholder: "مثلاً Dawn",
    senderNameHelp: 'شخصی که در مثال "در عوض این را امتحان کن" پیام می‌فرستد',
    receiverNameLabel: "نام گیرنده (اختیاری)",
    receiverNamePlaceholder: "مثلاً Kuber",
    receiverNameHelp: "شخصی که در مثال‌ها پیام دریافت می‌کند",
    yourCustomLink: "لینک سفارشی شما:",
    previewPage: "پیش‌نمایش صفحه →",
    tryPopular: "این احوال‌پرسی‌های محبوب را امتحان کن:",
    languageLabel: "زبان (اختیاری)",
    etc: "و غیره.",
    chatWaiting: "...؟",
    chatQuestion: "اون چیز چه ساعتی بود؟",
    chatAnswer: "اوه - ۳:۳۰ رفیق",
    chatGreetingQuestion: (greeting) => `${greeting}! اون چیز چه ساعتی بود؟`,
    chatQuickAnswer: "سلام، ۳:۳۰",
    chatThanks: "ممنون - می‌بینمت!",
    chatAcknowledge: "👌 مشکلی نیست",
  },
  fr: {
    tagline: "s'il vous plaît ne dites pas juste {greeting} dans le chat",
    phoneAnalogy: "Imaginez appeler quelqu'un au téléphone, dire {greeting}! puis le mettre en attente... 🤦‍♀️",
    dontDoThis: "Ne faites pas ça",
    insteadTryThis: "Essayez plutôt ceci",
    noteText: (receiverName) =>
      `Notez que Keith aurait pu obtenir sa réponse quelques minutes plus tôt et n'aurait pas eu besoin de faire attendre ${receiverName}. En fait, ${receiverName} aurait pu commencer à réfléchir à la question tout de suite!`,
    politenessText:
      "Les gens qui font cela essaient généralement d'être polis en ne sautant pas directement dans la demande, comme on le ferait en personne ou au téléphone - et c'est génial! Mais nous sommes en 2025 et le chat n'est ni l'un ni l'autre. Pour la plupart des gens, taper est beaucoup plus lent que parler. Donc, malgré les meilleures intentions, vous faites en fait juste attendre l'autre personne pendant que vous formulez votre question, ce qui est une perte de productivité (et un peu ennuyeux).",
    sameGoesFor: "Il en va de même pour:",
    areYouAround: "{greeting}, tu es là?",
    quickQuestion: "{greeting} sophie - question rapide.",
    gotASec: "Tu as une seconde?",
    justAskQuestion: "Posez simplement la question! 😫",
    ifBrusque: (greeting) =>
      `Si vous trouvez un peu brusque de simplement dire "${greeting}" et poser la question, vous pouvez toujours préfacer votre message avec autant de politesses que vous le souhaitez.`,
    forExample: "Par exemple:",
    exampleLong: (greeting) =>
      `${greeting}! J'espère que tu vas bien. J'ai besoin de la dernière présentation, quand tu auras un moment :)`,
    exampleMedium: (greeting) => `${greeting}, quoi de neuf? aussi, une idée de quand c'est dû?`,
    exampleShort: (greeting) => `${greeting}, si tu n'es pas occupé, pourrais-tu mettre à jour ces NFR?`,
    asyncText: (greeting) =>
      `Cela peut sembler trivial, mais poser votre question avant d'obtenir cette réponse de salutation initiale permet également une communication asynchrone. Si l'autre partie est absente et que vous partez avant qu'elle ne revienne, elle peut toujours répondre à votre question, au lieu de simplement fixer un "${greeting}" et se demander ce qu'elle a manqué.`,
    everyoneHappy: "Quand c'est bien fait - tout le monde est content! 🎉",
    halfSerious: "C'est un peu sérieux à moitié 😬 alors s'il vous plaît ne soyez pas",
    madLink: "fâché",
    statusWarning: (greeting) =>
      `Cela dit, si vous utilisez l'URL de ce site comme statut/bio de quelqu'un, préparez-vous à être ignoré si vous dites seulement "${greeting}!"`,
    createYourOwn: "Créez le vôtre sur",
    openSource: "Open Source sur",
    anotherProject: "un autre",
    dumbProject: "projet stupide",
    by: "par",
    availableIn: "Ce site est disponible en:",
    enterGreeting: "Entrez une salutation à décourager:",
    generate: "Générer",
    advancedOptions: "Options avancées",
    senderNameLabel: "Nom de l'expéditeur (facultatif)",
    senderNamePlaceholder: "ex. Dawn",
    senderNameHelp: 'La personne qui envoie des messages dans l\'exemple "Essayez plutôt ceci"',
    receiverNameLabel: "Nom du destinataire (facultatif)",
    receiverNamePlaceholder: "ex. Kuber",
    receiverNameHelp: "La personne qui reçoit des messages dans les exemples",
    yourCustomLink: "Votre lien personnalisé:",
    previewPage: "Aperçu de votre page →",
    tryPopular: "Essayez ces salutations populaires:",
    languageLabel: "Langue (facultatif)",
    etc: "etc.",
    chatWaiting: "...?",
    chatQuestion: "c'était à quelle heure déjà?",
    chatAnswer: "oh - 3:30 mec",
    chatGreetingQuestion: (greeting) => `${greeting}! C'était à quelle heure?`,
    chatQuickAnswer: "salut, 3:30",
    chatThanks: "Merci - à plus!",
    chatAcknowledge: "👌 pas de souci",
  },
  hi: {
    tagline: " कृपया चैट में सिर्फ {greeting} न कहें",
    phoneAnalogy: "कल्पना करें कि किसी को फोन करके {greeting}! कहें और फिर उन्हें होल्ड पर रख दें... 🤦‍♀️",
    dontDoThis: " ऐसा न करें",
    insteadTryThis: "इसके बजाय यह करें",
    noteText: (receiverName) =>
      `ध्यान दें कि कीथ को अपना जवाब कुछ मिनट पहले मिल सकता था और ${receiverName} को इंतजार नहीं करना पड़ता। वास्तव में, ${receiverName} तुरंत सवाल के बारे में सोचना शुरू कर सकते थे!`,
    politenessText:
      "जो लोग ऐसा करते हैं वे आम तौर पर विनम्र होने की कोशिश कर रहे होते हैं, सीधे अनुरोध में न कूदकर, जैसे कि व्यक्तिगत रूप से या फोन पर करते हैं - और यह बहुत अच्छा है! लेकिन यह 2025 है और चैट इनमें से कोई नहीं है। अधिकांश लोगों के लिए, टाइप करना बोलने से बहुत धीमा है। इसलिए सर्वोत्तम इरादों के बावजूद, आप वास्तव में दूसरे व्यक्ति को अपना सवाल पूछने के लिए इंतजार करवा रहे हैं, जो उत्पादकता की हानि है (और थोड़ा परेशान करने वाला है)।",
    sameGoesFor: "यही बात इनके लिए भी लागू होती है:",
    areYouAround: "{greeting}, क्या आप आसपास हैं?",
    quickQuestion: "{greeting} sophie - एक त्वरित सवाल।",
    gotASec: "एक सेकंड है?",
    justAskQuestion: "बस सवाल पूछें! 😫",
    ifBrusque: (greeting) =>
      `यदि आपको लगता है कि केवल "${greeting}" कहना और सवाल पूछना थोड़ा रूखा है, तो भी आप अपने संदेश को जितनी चाहें उतनी शिष्टाचार के साथ शुरू कर सकते हैं।`,
    forExample: "उदाहरण के लिए:",
    exampleLong: (greeting) => `${greeting}! उम्मीद है आप ठीक होंगे। मुझे नवीनतम प्रस्तुति चाहिए, जब आपके पास समय हो :)`,
    exampleMedium: (greeting) => `${greeting}, क्या हाल है? और, क्या पता है वह कब तक है?`,
    exampleShort: (greeting) => `${greeting}, अगर आप व्यस्त नहीं हैं, तो क्या आप उन NFRs को अपडेट कर सकते हैं?`,
    asyncText: (greeting) =>
      `यह तुच्छ लग सकता है, लेकिन उस प्रारंभिक अभिवादन उत्तर प्राप्त करने से पहले अपना सवाल पूछना भी असिंक्रोनस संचार की अनुमति देता है। यदि दूसरा पक्ष दूर है और आप उनके वापस आने से पहले चले जाते हैं, तो वे अभी भी आपके सवाल का जवाब दे सकते हैं, केवल "${greeting}" को घूरने और सोचने के बजाय कि उन्होंने क्या खो दिया।`,
    everyoneHappy: "जब सही तरीके से किया जाता है - सभी खुश हैं! 🎉",
    halfSerious: "यह केवल आधा गंभीर है 😬 so please don't",
    madLink: "नाराज़ न हों",
    statusWarning: (greeting) =>
      `उस ने कहा, यदि आप इस साइट के URL को किसी की स्थिति/बायो के रूप में उपयोग करते हैं, तो तैयार रहें कि यदि आप केवल "${greeting}!" कहते हैं तो आपको अनदेखा किया जाएगा`,
    createYourOwn: "अपना खुद का बनाएं",
    openSource: "ओपन सोर्स",
    anotherProject: "एक और",
    dumbProject: "बेवकूफ परियोजना",
    by: "द्वारा",
    availableIn: "यह साइट इन भाषाओं में उपलब्ध है:",
    enterGreeting: "हतोत्साहित करने के लिए एक अभिवादन दर्ज करें:",
    generate: "उत्पन्न करें",
    advancedOptions: "उन्नत विकल्प",
    senderNameLabel: "प्रेषक का नाम (वैकल्पिक)",
    senderNamePlaceholder: "उदा. Dawn",
    senderNameHelp: '"इसके बजाय यह करें" उदाहरण में संदेश भेजने वाला व्यक्ति',
    receiverNameLabel: "प्राप्तकर्ता का नाम (वैकल्पिक)",
    receiverNamePlaceholder: "उदा. Kuber",
    receiverNameHelp: "उदाहरणों में संदेश प्राप्त करने वाला व्यक्ति",
    yourCustomLink: "आपका कस्टम लिंक:",
    previewPage: "अपने पृष्ठ का पूर्वावलोकन करें →",
    tryPopular: "इन लोकप्रिय अभिवादनों को आज़माएं:",
    languageLabel: "भाषा (वैकल्पिक)",
    etc: "आदि।",
    chatWaiting: "...?",
    chatQuestion: "वह चीज़ फिर से कितने बजे थी?",
    chatAnswer: "ओह - 3:30 दोस्त",
    chatGreetingQuestion: (greeting) => `${greeting}! वह चीज़ कितने बजे थी?`,
    chatQuickAnswer: "अरे, 3:30",
    chatThanks: "धन्यवाद - फिर मिलेंगे!",
    chatAcknowledge: "👌 कोई बात नहीं",
  },
  he: {
    tagline: "בבקשה אל תגיד רק {greeting} בצ'אט",
    phoneAnalogy: "תאר לעצמך שאתה מתקשר למישהו, אומר {greeting}! ואז שם אותו בהמתנה... 🤦‍♀️",
    dontDoThis: "אל תעשה את זה",
    insteadTryThis: "במקום זאת נסה את זה",
    noteText: (receiverName) =>
      `שים לב שקית' יכול היה לקבל את התשובה שלו דקות קודם לכן ולא היה צריך לגרום ל-${receiverName} לחכות. למעשה, ${receiverName} יכול היה להתחיל לחשוב על השאלה מיד!`,
    politenessText:
      "אנשים שעושים את זה בדרך כלל מנסים להיות מנומסים בכך שהם לא קופצים ישר לבקשה, כמו שהיו עושים באופן אישי או בטלפון - וזה נהדר! אבל זה 2025 והצ'אט הוא לא אף אחד מאלה. עבור רוב האנשים, הקלדה היא הרבה יותר איטית מדיבור. אז למרות הכוונות הטובות ביותר, אתה בעצם רק גורם לאדם השני לחכות בזמן שאתה מנסח את השאלה שלך, וזה אובדן פרודוקטיביות (וקצת מעצבן).",
    sameGoesFor: "אותו דבר נכון גם ל:",
    areYouAround: "{greeting}, אתה בסביבה?",
    quickQuestion: "{greeting} סופי - שאלה מהירה.",
    gotASec: "יש לך שנייה?",
    justAskQuestion: "פשוט תשאל את השאלה! 😫",
    ifBrusque: (greeting) =>
      `אם אתה מרגיש שזה קצת גס לפשוט לומר "${greeting}" ולשאול את השאלה, אתה עדיין יכול להקדים את ההודעה שלך עם כמה שיותר נימוסים שאתה רוצה.`,
    forExample: "לדוגמה:",
    exampleLong: (greeting) => `${greeting}! מקווה שאתה בסדר. אני צריך את המצגת האחרונה, כשיהיה לך רגע :)`,
    exampleMedium: (greeting) => `${greeting}, מה נשמע? גם, יש לך מושג מתי זה אמור להיות מוכן?`,
    exampleShort: (greeting) => `${greeting}, אם אתה לא עסוק, אתה יכול לעדכן את ה-NFRs האלה?`,
    asyncText: (greeting) =>
      `זה אולי נראה טריוויאלי, אבל לשאול את השאלה שלך לפני שמקבלים את תשובת הברכה הראשונית גם מאפשר תקשורת אסינכרונית. אם הצד השני נעדר ואתה עוזב לפני שהם חוזרים, הם עדיין יכולים לענות על השאלה שלך, במקום פשוט לבהות ב-"${greeting}" ולתהות מה הם פספסו.`,
    everyoneHappy: "כשזה נעשה נכון - כולם מאושרים! 🎉",
    halfSerious: "זה רק חצי רציני 😬 אז בבקשה אל",
    madLink: "תכעס",
    statusWarning: (greeting) =>
      `עם זאת, אם אתה משתמש בכתובת האתר של האתר הזה כסטטוס/ביו של מישהו, היה מוכן להתעלם אם אתה רק אומר "${greeting}!"`,
    createYourOwn: "צור משלך ב",
    openSource: "קוד פתוח ב",
    anotherProject: "עוד",
    dumbProject: "פרויקט מטופש",
    by: "מאת",
    availableIn: "אתר זה זמין ב:",
    enterGreeting: "הזן ברכה להרתיע:",
    generate: "צור",
    advancedOptions: "אפשרויות מתקדמות",
    senderNameLabel: "שם השולח (אופציונלי)",
    senderNamePlaceholder: "לדוגמה Dawn",
    senderNameHelp: 'האדם ששולח הודעות בדוגמה "במקום זאת נסה את זה"',
    receiverNameLabel: "שם המקבל (אופציונלי)",
    receiverNamePlaceholder: "לדוגמה Kuber",
    receiverNameHelp: "האדם שמקבל הודעות בדוגמאות",
    yourCustomLink: "הקישור המותאם שלך:",
    previewPage: "תצוגה מקדימה של הדף שלך →",
    tryPopular: "נסה את הברכות הפופולריות האלה:",
    languageLabel: "שפה (אופציונלי)",
    etc: "וכו'.",
    chatWaiting: "...?",
    chatQuestion: "באיזו שעה זה היה שוב?",
    chatAnswer: "אה - 3:30 חבר",
    chatGreetingQuestion: (greeting) => `${greeting}! באיזו שעה זה היה?`,
    chatQuickAnswer: "היי, 3:30",
    chatThanks: "תודה - נתראה!",
    chatAcknowledge: "👌 אין בעיה",
  },
  id: {
    tagline: "tolong jangan hanya bilang {greeting} di chat",
    phoneAnalogy: "Bayangkan menelepon seseorang, bilang {greeting}! lalu menempatkan mereka di tunggu... 🤦‍♀️",
    dontDoThis: "Jangan lakukan ini",
    insteadTryThis: "Sebagai gantinya coba ini",
    noteText: (receiverName) =>
      `Perhatikan bahwa Keith bisa mendapatkan jawabannya beberapa menit lebih cepat dan tidak perlu membuat ${receiverName} menunggu. Bahkan, ${receiverName} bisa langsung mulai memikirkan pertanyaannya!`,
    politenessText:
      "Orang yang melakukan ini umumnya mencoba untuk sopan dengan tidak langsung masuk ke permintaan, seperti yang dilakukan secara langsung atau di telepon - dan itu bagus! Tapi ini tahun 2025 dan chat bukan salah satu dari itu. Untuk kebanyakan orang, mengetik jauh lebih lambat daripada berbicara. Jadi meskipun niat terbaik, Anda sebenarnya hanya membuat orang lain menunggu Anda merumuskan pertanyaan Anda, yang merupakan kehilangan produktivitas (dan agak mengganggu).",
    sameGoesFor: "Hal yang sama berlaku untuk:",
    areYouAround: "{greeting}, kamu ada?",
    quickQuestion: "{greeting} sophie - pertanyaan cepat.",
    gotASec: "Punya waktu sebentar?",
    justAskQuestion: "Langsung tanya saja! 😫",
    ifBrusque: (greeting) =>
      `Jika Anda merasa agak kasar untuk hanya mengatakan "${greeting}" dan mengajukan pertanyaan, Anda masih dapat mengawali pesan Anda dengan sebanyak mungkin basa-basi yang Anda anggap pantas.`,
    forExample: "Misalnya:",
    exampleLong: (greeting) =>
      `${greeting}! Semoga kamu baik-baik saja. Aku butuh deck terbaru, kalau kamu ada waktu :)`,
    exampleMedium: (greeting) => `${greeting}, apa kabar? juga, ada ide kapan itu jatuh tempo?`,
    exampleShort: (greeting) => `${greeting}, kalau kamu tidak sibuk, bisakah kamu update NFR itu?`,
    asyncText: (greeting) =>
      `Mungkin tampak sepele, tetapi mengajukan pertanyaan Anda sebelum mendapatkan balasan salam awal juga memungkinkan komunikasi asinkron. Jika pihak lain sedang pergi, dan Anda pergi sebelum mereka kembali, mereka masih dapat menjawab pertanyaan Anda, alih-alih hanya menatap "${greeting}" dan bertanya-tanya apa yang mereka lewatkan.`,
    everyoneHappy: "Ketika dilakukan dengan benar - semua orang senang! 🎉",
    halfSerious: "Ini hanya setengah serius 😬 jadi tolong jangan",
    madLink: "marah",
    statusWarning: (greeting) =>
      `Meskipun demikian, jika Anda menggunakan URL situs ini sebagai status/bio seseorang, bersiaplah untuk diabaikan jika Anda hanya mengatakan "${greeting}!"`,
    createYourOwn: "Buat milikmu di",
    openSource: "Open Source di",
    anotherProject: "lagi",
    dumbProject: "proyek bodoh",
    by: "oleh",
    availableIn: "Situs ini tersedia dalam:",
    enterGreeting: "Masukkan sapaan untuk dicegah:",
    generate: "Buat",
    advancedOptions: "Opsi Lanjutan",
    senderNameLabel: "Nama Pengirim (opsional)",
    senderNamePlaceholder: "mis. Dawn",
    senderNameHelp: 'Orang yang mengirim pesan dalam contoh "Sebagai gantinya coba ini"',
    receiverNameLabel: "Nama Penerima (opsional)",
    receiverNamePlaceholder: "mis. Kuber",
    receiverNameHelp: "Orang yang menerima pesan dalam contoh",
    yourCustomLink: "Link kustom Anda:",
    previewPage: "Pratinjau halaman Anda →",
    tryPopular: "Coba sapaan populer ini:",
    languageLabel: "Bahasa (opsional)",
    etc: "dll.",
    chatWaiting: "...?",
    chatQuestion: "jam berapa itu lagi?",
    chatAnswer: "oh - 3:30 teman",
    chatGreetingQuestion: (greeting) => `${greeting}! Jam berapa itu?`,
    chatQuickAnswer: "hei, 3:30",
    chatThanks: "Terima kasih - sampai jumpa!",
    chatAcknowledge: "👌 tidak masalah",
  },
  it: {
    tagline: "per favore non dire solo {greeting} in chat",
    phoneAnalogy: "Immagina di chiamare qualcuno al telefono, dire {greeting}! e poi metterlo in attesa... 🤦‍♀️",
    dontDoThis: "Non farlo",
    insteadTryThis: "Invece prova questo",
    noteText: (receiverName) =>
      `Nota che Keith avrebbe potuto ottenere la sua risposta minuti prima e non avrebbe dovuto far aspettare ${receiverName}. Infatti, ${receiverName} avrebbe potuto iniziare a pensare alla domanda subito!`,
    politenessText:
      "Le persone che fanno questo stanno generalmente cercando di essere educate non saltando direttamente alla richiesta, come si farebbe di persona o al telefono - ed è fantastico! Ma è il 2025 e la chat non è nessuna di queste cose. Per la maggior parte delle persone, digitare è molto più lento che parlare. Quindi, nonostante le migliori intenzioni, stai effettivamente solo facendo aspettare l'altra persona mentre formuli la tua domanda, il che è una perdita di produttività (e un po' fastidioso).",
    sameGoesFor: "Lo stesso vale per:",
    areYouAround: "{greeting}, ci sei?",
    quickQuestion: "{greeting} sophie - domanda veloce.",
    gotASec: "Hai un secondo?",
    justAskQuestion: "Fai semplicemente la domanda! 😫",
    ifBrusque: (greeting) =>
      `Se ritieni che sia un po' brusco dire semplicemente "${greeting}" e fare la domanda, puoi comunque prefissare il tuo messaggio con tutte le cortesie che ritieni opportune.`,
    forExample: "Per esempio:",
    exampleLong: (greeting) =>
      `${greeting}! Spero tu stia bene. Ho bisogno dell'ultima presentazione, quando hai un momento :)`,
    exampleMedium: (greeting) => `${greeting}, come va? inoltre, hai idea di quando è dovuto?`,
    exampleShort: (greeting) => `${greeting}, se non sei occupato, potresti aggiornare quei NFR?`,
    asyncText: (greeting) =>
      `Può sembrare banale, ma asking your question before getting that initial salutatory reply also allows for asynchronous communication. If the other party is away, and you leave before they come back, they can still answer your question, instead of just staring at a "${greeting}" and wondering what they missed.`,
    everyoneHappy: "Quando fatto bene - tutti sono felici! 🎉",
    halfSerious: "Questo è solo mezzo serio 😬 quindi per favore non",
    madLink: "arrabbiarti",
    statusWarning: (greeting) =>
      `Detto questo, se usi l'URL di questo sito come stato/bio di qualcuno, preparati a essere ignorato se dici solo "${greeting}!"`,
    createYourOwn: "Crea il tuo su",
    openSource: "Open Source su",
    anotherProject: "un altro",
    dumbProject: "progetto stupido",
    by: "di",
    availableIn: "Questo sito è disponibile in:",
    enterGreeting: "Inserisci un saluto da scoraggiare:",
    generate: "Genera",
    advancedOptions: "Opzioni avanzate",
    senderNameLabel: "Nome mittente (opzionale)",
    senderNamePlaceholder: "es. Dawn",
    senderNameHelp: 'La persona che invia messaggi nell\'esempio "Invece prova questo"',
    receiverNameLabel: "Nome destinatario (opzionale)",
    receiverNamePlaceholder: "es. Kuber",
    receiverNameHelp: "La persona che riceve messaggi negli esempi",
    yourCustomLink: "Il tuo link personalizzato:",
    previewPage: "Anteprima della tua pagina →",
    tryPopular: "Prova questi saluti popolari:",
    languageLabel: "Lingua (opzionale)",
    etc: "ecc.",
    chatWaiting: "...?",
    chatQuestion: "a che ora era quella cosa?",
    chatAnswer: "oh - 3:30 amico",
    chatGreetingQuestion: (greeting) => `${greeting}! A che ora era quella cosa?`,
    chatQuickAnswer: "ehi, 3:30",
    chatThanks: "Grazie - ci vediamo!",
    chatAcknowledge: "👌 nessun problema",
  },
  pl: {
    tagline: "proszę nie mów tylko {greeting} na czacie",
    phoneAnalogy: "Wyobraź sobie, że dzwonisz do kogoś, mówisz {greeting}! a potem zostawiasz go w zawieszeniu... 🤦‍♀️",
    dontDoThis: "Nie rób tego",
    insteadTryThis: "Zamiast tego spróbuj tego",
    noteText: (receiverName) =>
      `Zauważ, że Keith mógł otrzymać odpowiedź kilka minut wcześniej i nie musiałby kazać ${receiverName} czekać. W rzeczywistości ${receiverName} mógł od razu zacząć myśleć o pytaniu!`,
    politenessText:
      "Ludzie, którzy to robią, zazwyczaj starają się być uprzejmi, nie wskakując od razu w prośbę, jak zrobiliby to osobiście lub przez telefon - i to świetnie! Ale jest 2025 rok, a czat nie jest żadną z tych rzeczy. Dla większości ludzi pisanie jest o wiele wolniejsze niż mówienie. Więc pomimo najlepszych intencji, w rzeczywistości po prostu sprawiasz, że druga osoba czeka, aż sformulujesz swoje pytanie, co jest stratą produktywności (i trochę irytujące).",
    sameGoesFor: "To samo dotyczy:",
    areYouAround: "{greeting}, jesteś tam?",
    quickQuestion: "{greeting} sophie - szybkie pytanie.",
    gotASec: "Masz chwilę?",
    justAskQuestion: "Po prostu zadaj pytanie! 😫",
    ifBrusque: (greeting) =>
      `Jeśli uważasz, że po prostu powiedzenie "${greeting}" i zadanie pytania jest trochę szorstkie, nadal możesz poprzedzić swoją wiadomość tyloma uprzejmościami, ile uznasz za stosowne.`,
    forExample: "Na przykład:",
    exampleLong: (greeting) =>
      `${greeting}! Mam nadzieję, że się masz dobrze. Potrzebuję najnowszej prezentacji, kiedy będziesz miał chwilę :)`,
    exampleMedium: (greeting) => `${greeting}, co słychać? również, masz pojęcie, kiedy to jest?`,
    exampleShort: (greeting) => `${greeting}, jeśli nie jesteś zajęty, czy mógłbyś zaktualizować te NFR?`,
    asyncText: (greeting) =>
      `Może się to wydawać trywialne, ale zadanie pytania przed otrzymaniem tej początkowej odpowiedzi na powitanie pozwala również na komunikację asynchroniczną. Jeśli druga strona jest nieobecna i wyjdziesz, zanim wróci, nadal może odpowiedzieć na twoje pytanie, zamiast po prostu gapić się na "${greeting}" i zastanawiać się, co przegapił.`,
    everyoneHappy: "Kiedy jest dobrze zrobione - wszyscy są szczęśliwi! 🎉",
    halfSerious: "To tylko na pół poważne 😬 więc proszę nie",
    madLink: "złość się",
    statusWarning: (greeting) =>
      `Biorąc to pod uwagę, jeśli użyjesz adresu URL tej witryny jako statusu/bio kogoś, przygotuj się na ignorowanie, jeśli powiesz tylko "${greeting}!"`,
    createYourOwn: "Stwórz własny na",
    openSource: "Open Source na",
    anotherProject: "kolejny",
    dumbProject: "głupi projekt",
    by: "przez",
    availableIn: "Ta strona jest dostępna w:",
    enterGreeting: "Wprowadź powitanie do zniechęcenia:",
    generate: "Generuj",
    advancedOptions: "Opcje zaawansowane",
    senderNameLabel: "Imię nadawcy (opcjonalne)",
    senderNamePlaceholder: "np. Dawn",
    senderNameHelp: 'Osoba wysyłająca wiadomości w przykładzie "Zamiast tego spróbuj tego"',
    receiverNameLabel: "Imię odbiorcy (opcjonalne)",
    receiverNamePlaceholder: "np. Kuber",
    receiverNameHelp: "Osoba otrzymująca wiadomości w przykładach",
    yourCustomLink: "Twój niestandardowy link:",
    previewPage: "Podgląd strony →",
    tryPopular: "Wypróbuj te popularne powitania:",
    languageLabel: "Język (opcjonalny)",
    etc: "itp.",
    chatWaiting: "...?",
    chatQuestion: "o której to było?",
    chatAnswer: "oh - 3:30 kolego",
    chatGreetingQuestion: (greeting) => `${greeting}! O której to było?`,
    chatQuickAnswer: "cześć, 3:30",
    chatThanks: "Dzięki - do zobaczenia!",
    chatAcknowledge: "👌 nie ma sprawy",
  },
  pt: {
    tagline: "por favor não diga apenas {greeting} no chat",
    phoneAnalogy: "Imagine ligar para alguém, dizer {greeting}! e depois colocá-lo em espera... 🤦‍♀️",
    dontDoThis: "Não faça isso",
    insteadTryThis: "Em vez disso, tente isto",
    noteText: (receiverName) =>
      `Note que Keith poderia ter obtido sua resposta minutos antes e não precisaria ter feito ${receiverName} esperar. Na verdade, ${receiverName} poderia ter começado a pensar na pergunta imediatamente!`,
    politenessText:
      "As pessoas que fazem isso geralmente estão tentando ser educadas ao não pular direto para o pedido, como fariam pessoalmente ou ao telefone - e isso é ótimo! Mas é 2025 e o chat não é nenhuma dessas coisas. Para a maioria das pessoas, digitar é muito mais lento do que falar. Então, apesar das melhores intenções, você está na verdade apenas fazendo a outra pessoa esperar enquanto você formula sua pergunta, o que é perda de produtividade (e meio irritante).",
    sameGoesFor: "O mesmo vale para:",
    areYouAround: "{greeting}, estás por aí?",
    quickQuestion: "{greeting} sophie - pergunta rápida.",
    gotASec: "Tens um segundo?",
    justAskQuestion: "Apenas faça a pergunta! 😫",
    ifBrusque: (greeting) =>
      `Se você acha um pouco brusco simplesmente dizer "${greeting}" e fazer a pergunta, você ainda pode prefaciar sua mensagem com quantas cortesias achar apropriado.`,
    forExample: "Por exemplo:",
    exampleLong: (greeting) =>
      `${greeting}! Espero que estejas bem. Preciso da última apresentação, quando tiveres um momento :)`,
    exampleMedium: (greeting) => `${greeting}, o que se passa? também, tens ideia de quando é que isso é devido?`,
    exampleShort: (greeting) => `${greeting}, se não estiver ocupado, poderias atualizar esses NFRs?`,
    asyncText: (greeting) =>
      `Pode parecer trivial, but making your question before getting that initial salutatory reply also allows for asynchronous communication. If the other party is away, and you leave before they come back, they can still answer your question, instead of just staring at a "${greeting}" and wondering what they missed.`,
    everyoneHappy: "Quando feito corretamente - todos ficam felizes! 🎉",
    halfSerious: "Isto é meio a sério 😬 então por favor não fiques",
    madLink: "zangado",
    statusWarning: (greeting) =>
      `Dito isto, se usares o URL deste site como status/bio de alguém, prepara-te para ser ignorado se apenas disseres "${greeting}!"`,
    createYourOwn: "Cria o teu próprio em",
    openSource: "Open Source em",
    anotherProject: "outro",
    dumbProject: "projeto idiota",
    by: "por",
    availableIn: "Este site está disponível em:",
    enterGreeting: "Introduz uma saudação para desencorajar:",
    generate: "Gerar",
    advancedOptions: "Opções avançadas",
    senderNameLabel: "Nome do remetente (opcional)",
    senderNamePlaceholder: "ex. Dawn",
    senderNameHelp: 'A pessoa que envia mensagens no exemplo "Em vez disso, tente isto"',
    receiverNameLabel: "Nome do destinatário (opcional)",
    receiverNamePlaceholder: "ex. Kuber",
    receiverNameHelp: "A pessoa que recebe mensagens nos exemplos",
    yourCustomLink: "O teu link personalizado:",
    previewPage: "Pré-visualizar a tua página →",
    tryPopular: "Experimenta estas saudações populares:",
    languageLabel: "Idioma (opcional)",
    etc: "etc.",
    chatWaiting: "...?",
    chatQuestion: "a que horas era aquilo?",
    chatAnswer: "oh - 3:30 amigo",
    chatGreetingQuestion: (greeting) => `${greeting}! A que horas era aquilo?`,
    chatQuickAnswer: "olá, 3:30",
    chatThanks: "Obrigado - até logo!",
    chatAcknowledge: "👌 sem problema",
  },
  "pt-br": {
    tagline: "por favor não diga apenas {greeting} no chat",
    phoneAnalogy: "Imagine ligar para alguém, dizer {greeting}! e depois colocá-lo em espera... 🤦‍♀️",
    dontDoThis: "Não faça isso",
    insteadTryThis: "Em vez disso, tente isto",
    noteText: (receiverName) =>
      `Note que Keith poderia ter obtido sua resposta minutos antes e não precisaria ter feito ${receiverName} esperar. Na verdade, ${receiverName} poderia ter começado a pensar na pergunta imediatamente!`,
    politenessText:
      "As pessoas que fazem isso geralmente estão tentando ser educadas ao não pular direto para o pedido, como fariam pessoalmente ou ao telefone - e isso é ótimo! Mas é 2025 e o chat não é nenhuma dessas coisas. Para a maioria das pessoas, digitar é muito mais lento do que falar. Então, apesar das melhores intenções, você está na verdade apenas fazendo a outra pessoa esperar enquanto você formula sua pergunta, o que é perda de produtividade (e meio irritante).",
    sameGoesFor: "O mesmo vale para:",
    areYouAround: "{greeting}, você está por aí?",
    quickQuestion: "{greeting} sophie - pergunta rápida.",
    gotASec: "Você tem um segundo?",
    justAskQuestion: "Apenas faça a pergunta! 😫",
    ifBrusque: (greeting) =>
      `Se você acha um pouco brusco simplesmente dizer "${greeting}" e fazer a pergunta, você ainda pode prefaciar sua mensagem com quantas cortesias achar apropriado.`,
    forExample: "Por exemplo:",
    exampleLong: (greeting) =>
      `${greeting}! Espero que você esteja bem. Preciso da última apresentação, quando você tiver um momento :)`,
    exampleMedium: (greeting) => `${greeting}, e aí? também, você tem ideia de quando isso é devido?`,
    exampleShort: (greeting) => `${greeting}, se você não estiver ocupado, você poderia atualizar esses NFRs?`,
    asyncText: (greeting) =>
      `Pode parecer trivial, but making your question before getting that initial salutatory reply also allows for asynchronous communication. If the other party is away, and you leave before they come back, they can still answer your question, instead of just staring at a "${greeting}" and wondering what they missed.`,
    everyoneHappy: "Quando feito corretamente - todos ficam felizes! 🎉",
    halfSerious: "Isso é meio sério 😬 então por favor não fique",
    madLink: "bravo",
    statusWarning: (greeting) =>
      `Dito isso, se você usar a URL deste site como status/bio de alguém, prepare-se para ser ignorado se você apenas disser "${greeting}!"`,
    createYourOwn: "Crie o seu próprio em",
    openSource: "Open Source em",
    anotherProject: "outro",
    dumbProject: "projeto idiota",
    by: "por",
    availableIn: "Este site está disponível em:",
    enterGreeting: "Digite uma saudação para desencorajar:",
    generate: "Gerar",
    advancedOptions: "Opções avançadas",
    senderNameLabel: "Nome do remetente (opcional)",
    senderNamePlaceholder: "ex. Dawn",
    senderNameHelp: 'A pessoa que envia mensagens no exemplo "Em vez disso, tente isto"',
    receiverNameLabel: "Nome do destinatário (opcional)",
    receiverNamePlaceholder: "ex. Kuber",
    receiverNameHelp: "A pessoa que recebe mensagens nos exemplos",
    yourCustomLink: "Seu link personalizado:",
    previewPage: "Pré-visualizar sua página →",
    tryPopular: "Experimente essas saudações populares:",
    languageLabel: "Idioma (opcional)",
    etc: "etc.",
    chatWaiting: "...?",
    chatQuestion: "que horas era aquilo mesmo?",
    chatAnswer: "ah - 3:30 cara",
    chatGreetingQuestion: (greeting) => `${greeting}! Que horas era aquilo?`,
    chatQuickAnswer: "oi, 3:30",
    chatThanks: "Valeu - até mais!",
    chatAcknowledge: "👌 de boa",
  },
  ru: {
    tagline: "пожалуйста, не говорите просто {greeting} в чате",
    phoneAnalogy: "Представьте, что вы звоните кому-то, говорите {greeting}! а затем просто молчите... 🤦‍♀️",
    dontDoThis: "Так делать не надо",
    insteadTryThis: "Вместо этого попробуйте так",
    noteText: (receiverName) =>
      `Обратите внимание, что Кит мог получить свой ответ на несколько минут раньше и не нужно было заставлять ${receiverName} ждать. Фактически, ${receiverName} мог сразу начать думать о вопросе!`,
    politenessText:
      "Люди, которые делают это, обычно пытаются быть вежливыми, не переходя сразу к просьбе, как это было бы лично или по телефону - и это здорово! Но сейчас 2025 год, и чат - это ни то, ни другое. Для большинства людей набор текста намного медленнее, чем речь. Поэтому, несмотря на хорошие намерения, вы на самом деле просто заставляете другого человека ждать, пока вы формулируете свой вопрос, что является потерей производительности (и немного раздражает).",
    sameGoesFor: "То же самое относится к:",
    areYouAround: "{greeting}, ты здесь?",
    quickQuestion: "{greeting} софи - быстрый вопрос.",
    gotASec: "Есть секунда?",
    justAskQuestion: "Просто задайте вопрос! 😫",
    ifBrusque: (greeting) =>
      `Если вы считаете, что просто сказать "${greeting}" и задать вопрос немного резко, вы все равно можете начать свое сообщение любым количеством любезностей, которые считаете нужными.`,
    forExample: "Например:",
    exampleLong: (greeting) =>
      `${greeting}! Надеюсь, у тебя все хорошо. Мне нужна крайняя презентация, когда у тебя будет минутка :)`,
    exampleMedium: (greeting) => `${greeting}, как дела? кстати, есть идея, когда это должно быть готово?`,
    exampleShort: (greeting) => `${greeting}, если ты не занят, не мог бы ты обновить эти NFR?`,
    asyncText: (greeting) =>
      `Это может показаться очевидным, но задавая свой вопрос до получения этого начального приветственного ответа, вы также обеспечиваете асинхронную коммуникацию. Если другая сторона отсутствует, и вы уходите до ее возвращения, она все равно может ответить на ваш вопрос, вместо того чтобы просто смотреть на "${greeting}" и гадать, что она пропустила.`,
    everyoneHappy: "Когда все сделано правильно - все счастливы! 🎉",
    halfSerious: "Это только наполовину всерьез 😬 так что, пожалуйста, не",
    madLink: "злитесь",
    statusWarning: (greeting) =>
      `Тем не менее, если вы используете URL этого сайта в качестве чьего-то статуса/био, будьте готовы к тому, что вас проигнорируют, если вы скажете только "${greeting}!"`,
    createYourOwn: "Создайте свой собственный на",
    openSource: "Open Source на",
    anotherProject: "еще один",
    dumbProject: "глупый проект",
    by: "от",
    availableIn: "Этот сайт доступен на:",
    enterGreeting: "Введите приветствие, от которого нужно отговорить:",
    generate: "Создать",
    advancedOptions: "Дополнительные параметры",
    senderNameLabel: "Имя отправителя (необязательно)",
    senderNamePlaceholder: "напр. Dawn",
    senderNameHelp: 'Человек, отправляющий сообщения в примере "Вместо этого попробуйте это"',
    receiverNameLabel: "Имя получателя (необязательно)",
    receiverNamePlaceholder: "напр. Kuber",
    receiverNameHelp: "Человек, получающий сообщения в примерах",
    yourCustomLink: "Ваша пользовательская ссылка:",
    previewPage: "Предварительный просмотр вашей страницы →",
    tryPopular: "Попробуйте эти популярные приветствия:",
    languageLabel: "Язык (необязательно)",
    etc: "и т.д.",
    chatWaiting: "...?",
    chatQuestion: "во сколько это было?",
    chatAnswer: "ох - 3:30 друг",
    chatGreetingQuestion: (greeting) => `${greeting}! Во сколько это было?`,
    chatQuickAnswer: "привет, 3:30",
    chatThanks: "Спасибо - увидимся!",
    chatAcknowledge: "👌 без проблем",
  },
  sv: {
    tagline: "snälla säg inte bara {greeting} i chatten",
    phoneAnalogy: "Föreställ dig att ringa någon, säga {greeting}! och sedan sätta dem på väntan... 🤦‍♀️",
    dontDoThis: "Gör inte detta",
    insteadTryThis: "Prova istället detta",
    noteText: (receiverName) =>
      `Notera att Keith kunde ha fått sitt svar minuter tidigare och behövde inte ha låtit ${receiverName} vänta. Faktiskt kunde ${receiverName} ha börjat tänka på frågan direkt!`,
    politenessText:
      "Människor som gör detta försöker i allmänhet vara artiga genom att inte hoppa direkt in i begäran, som man skulle göra personligen eller i telefon - och det är fantastiskt! Men det är 2025 och chatt är inget av dessa. För de flesta människor är att skriva mycket långsammare än att prata. Så trots bästa avsikter får du faktiskt bara den andra personen att vänta medan du formulerar din fråga, vilket är förlorad produktivitet (och lite irriterande).",
    sameGoesFor: "Detsamma gäller för:",
    areYouAround: "{greeting}, är du där?",
    quickQuestion: "{greeting} sophie - snabb fråga.",
    gotASec: "Har du en sekund?",
    justAskQuestion: "Ställ bara frågan! 😫",
    ifBrusque: (greeting) =>
      `Om du tycker att det är lite burdust att bara säga "${greeting}" och ställa frågan, kan du fortfarande inleda ditt meddelande med så många artigheter som du tycker är lämpligt.`,
    forExample: "Till exempel:",
    exampleLong: (greeting) =>
      `${greeting}! Hoppas du mår bra. Jag behöver den senaste presentationen, när du har tid :)`,
    exampleMedium: (greeting) => `${greeting}, vad händer? också, har du någon aning om när det ska vara klart?`,
    exampleShort: (greeting) => `${greeting}, om du inte är upptagen, kan du uppdatera de där NFR:erna?`,
    asyncText: (greeting) =>
      `Det kan verka trivialt, men att ställa din fråga innan du får det första hälsningssvaret möjliggör också asynkron kommunikation. Om den andra parten är borta och du går innan de kommer tillbaka, kan de fortfarande svara på din fråga, istället för att bara stirra på ett "${greeting}" och undra vad de missade.`,
    everyoneHappy: "När det görs rätt - alla är glada! 🎉",
    halfSerious: "Detta är bara halvt på allvar 😬 så snälla bli inte",
    madLink: "arg",
    statusWarning: (greeting) =>
      `Med det sagt, om du använder denna webbplats URL som någons status/bio, var beredd på att bli ignorerad om du bara säger "${greeting}!"`,
    createYourOwn: "Skapa din egen på",
    openSource: "Open Source på",
    anotherProject: "ett annat",
    dumbProject: "dumt projekt",
    by: "av",
    availableIn: "Denna webbplats är tillgänglig på:",
    enterGreeting: "Ange en hälsning att avråda från:",
    generate: "Generera",
    advancedOptions: "Avancerade alternativ",
    senderNameLabel: "Avsändarens namn (valfritt)",
    senderNamePlaceholder: "t.ex. Dawn",
    senderNameHelp: 'Personen som skickar meddelanden i exemplet "Prova istället detta"',
    receiverNameLabel: "Mottagarens namn (valfritt)",
    receiverNamePlaceholder: "t.ex. Kuber",
    receiverNameHelp: "Personen som tar emot meddelanden i exemplen",
    yourCustomLink: "Din anpassade länk:",
    previewPage: "Förhandsgranska din sida →",
    tryPopular: "Prova dessa populära hälsningar:",
    languageLabel: "Språk (valfritt)",
    etc: "etc.",
    chatWaiting: "...?",
    chatQuestion: "vilken tid var det igen?",
    chatAnswer: "oh - 3:30 kompis",
    chatGreetingQuestion: (greeting) => `${greeting}! Vilken tid var det?`,
    chatQuickAnswer: "hej, 3:30",
    chatThanks: "Tack - vi ses!",
    chatAcknowledge: "👌 inga problem",
  },
  tr: {
    tagline: "lütfen sohbette sadece {greeting} demeyin",
    phoneAnalogy: "Birini arayıp {greeting}! dediğinizi ve sonra beklemeye aldığınızı hayal edin... 🤦‍♀️",
    dontDoThis: "Bunu yapmayın",
    insteadTryThis: "Bunun yerine bunu deneyin",
    noteText: (receiverName) =>
      `Keith'in cevabını dakikalar önce alabileceğini ve ${receiverName}'i bekletmesine gerek olmadığını unutmayın. Aslında, ${receiverName} soruyu hemen düşünmeye başlayabilirdi!`,
    politenessText:
      "Bunu yapan insanlar genellikle yüz yüze veya telefonda olduğu gibi doğrudan isteğe atlamayarak kibar olmaya çalışıyorlar - ve bu harika! Ama 2025 yılındayız ve sohbet bunların hiçbiri değil. Çoğu insan için yazmak konuşmaktan çok daha yavaştır. Yani en iyi niyetlere rağmen, aslında sadece diğer kişinin sorunuzu ifade etmenizi beklemesini sağlıyorsunuz, bu da kayıp verimlilik (ve biraz sinir bozucu).",
    sameGoesFor: "Aynı şey bunlar için de geçerli:",
    areYouAround: "{greeting}, orada mısın?",
    quickQuestion: "{greeting} sophie - hızlı bir soru.",
    gotASec: "Bir saniye var mı?",
    justAskQuestion: "Sadece soruyu sorun! 😫",
    ifBrusque: (greeting) =>
      `Sadece "${greeting}" demek ve soruyu sormak biraz kaba geliyorsa, mesajınızı uygun gördüğünüz kadar nezaketle başlatabilirsiniz.`,
    forExample: "Örneğin:",
    exampleLong: (greeting) => `${greeting}! Umarım iyisindir. En son sunuma ihtiyacım var, müsait olduğunda :)`,
    exampleMedium: (greeting) => `${greeting}, naber? ayrıca, ne zaman teslim olacağı hakkında bir fikrin var mı?`,
    exampleShort: (greeting) => `${greeting}, meşgul değilsen, şu NFR'ları güncelleyebilir misin?`,
    asyncText: (greeting) =>
      `Önemsiz görünebilir, ancak o ilk selamlama yanıtını almadan önce sorunuzu sormak aynı zamanda asenkron iletişime de olanak tanır. Diğer taraf uzaktaysa ve siz onlar geri gelmeden önce ayrılırsanız, sadece bir "${greeting}"e bakıp neyi kaçırdıklarını merak etmek yerine sorunuzu yine de cevaplayabilirler.`,
    everyoneHappy: "Doğru yapıldığında - herkes mutlu! 🎉",
    halfSerious: "Bu sadece yarı ciddi 😬 bu yüzden lütfen",
    madLink: "kızmayın",
    statusWarning: (greeting) =>
      `Bununla birlikte, bu sitenin URL'sini birinin durum/biyografisi olarak kullanırsanız, sadece "${greeting}!" derseniz göz ardı edilmeye hazır olun`,
    createYourOwn: "Kendinizinkini oluşturun",
    openSource: "Açık Kaynak",
    anotherProject: "bir başka",
    dumbProject: "aptal proje",
    by: "tarafından",
    availableIn: "Bu site şu dillerde mevcuttur:",
    enterGreeting: "Caydırmak için bir selamlama girin:",
    generate: "Oluştur",
    advancedOptions: "Gelişmiş Seçenekler",
    senderNameLabel: "Gönderen Adı (isteğe bağlı)",
    senderNamePlaceholder: "örn. Dawn",
    senderNameHelp: '"Bunun yerine bunu deneyin" örneğinde mesaj gönderen kişi',
    receiverNameLabel: "Alıcı Adı (isteğe bağlı)",
    receiverNamePlaceholder: "örn. Kuber",
    receiverNameHelp: "Örneklerde mesaj alan kişi",
    yourCustomLink: "Özel bağlantınız:",
    previewPage: "Sayfanızı önizleyin →",
    tryPopular: "Bu popüler selamlamaları deneyin:",
    languageLabel: "Dil (isteğe bağlı)",
    etc: "vb.",
    chatWaiting: "...?",
    chatQuestion: "o şey saat kaçtaydı?",
    chatAnswer: "oh - 3:30 dostum",
    chatGreetingQuestion: (greeting) => `${greeting}! O şey saat kaçtaydı?`,
    chatQuickAnswer: "hey, 3:30",
    chatThanks: "Teşekkürler - görüşürüz!",
    chatAcknowledge: "👌 sorun değil",
  },
  th: {
    tagline: "ได้โปรดอย่าพูดแค่ \"{greeting}\" ในแชท",
    phoneAnalogy: "ลองจินตนาการว่ากำลังโทรหาใครสักคน แล้วก็พูดแค่ {greeting}! หลังจากนั้นก็เงียบไม่พูดต่อ... 🤦‍♀️",
    dontDoThis: "อย่าหาทำ",
    insteadTryThis: "ลองแบบนี้ดีกว่า",
    noteText: (receiverName) =>
      `ลองคิดดูนะ ถ้า Keith ถามตรงๆ ตั้งแต่แรก ก็คงได้คำตอบก่อนไปแล้วหลายนาที และ ${receiverName} ก็ไม่ต้องมานั่งจ้องหน้าจอรอคำถาม ทั้งๆที่ ${receiverName} น่าจะเริ่มคิดหาคำตอบให้ได้เลยด้วยซ้ำ!`,
    politenessText:
      "คนที่ทักแบบนี้ส่วนใหญ่ก็แค่พยายามจะสุภาพนะ ไม่อยากพรวดถามเข้าประเด็นไปเลยเหมือนตอนคุยกันแบบเจอหน้าหรือโทรหากัน - ซึ่งมันก็เหมือนจะดีแหละ! แต่ว่า... นี่มันปี 2025 แล้วนะจ๊ะ การแชทมันไม่ได้เวิร์กแบบนั้นหรอก คนส่วนใหญ่พิมพ์ช้ากว่าพูดอยู่หลายเท่า ดังนั้นถึงแม้คุณจะตั้งใจดี แต่ความจริงคือคุณกำลังให้อีกฝ่ายต้องนั่งจ้องหน้าจอรอคุณพิมพ์คำถามทีละตัวอักษร ซึ่งมันเสียเวลาทำมาหากิน (ว่ากันตรงๆ มันก็... แอบน่ารำคาญเหมือนกัน)",
    sameGoesFor: "แล้วไอ้พวกนี้ก็เหมือนกัน:",
    areYouAround: "{greeting} อยู่มั้ย?",
    quickQuestion: "{greeting} มีคำถามครับ",
    gotASec: "ว่างมั้ย?",
    justAskQuestion: "อยากรู้อะไรก็ถามมาเล้ย! 😫",
    ifBrusque: (greeting) =>
      `ถ้ารู้สึกว่าแค่ "${greeting}" มันดูห้วนไปไม่ค่อยนุ่มนวล เราสามารถใส่คำทักทายหรือจะสอบถามสารทุกข์สุขดิบเพิ่มได้เท่าที่ต้องการ ไม่มีใครว่าหรอก`,
    forExample: "ตัวอย่างเช่น:",
    exampleLong: (greeting) => `${greeting} สบายดีไหม? คือเราอยากได้ไฟล์สไลด์ตัวล่าสุดหน่อย พอวจะ่างช่วยส่งให้หน่อยได้มั้ย :)`,
    exampleMedium: (greeting) => `${greeting} เป็นไงบ้าง? อยากถามว่าของนั่นมันครบกำหนดส่งเมื่อไหร่เหรอครับ?`,
    exampleShort: (greeting) => `${greeting} ถ้าว่างๆ ช่วยอัพเดต NFR พวกนั้นให้หน่อยได้มั้ยครับ?`,
    asyncText: (greeting) =>
      `อาจจะดูเป็นเรื่องเล็กๆ แต่การถามคำถามเลยโดยไม่ต้องรอให้อีกฝ่ายตอบทักทายก่อน ก็ทำให้คุยกันแบบไม่ต้องออนไลน์พร้อมกันได้ด้วยนะ ถ้าอีกฝ่ายไม่อยู่ตอนนั้น และคุณออฟไปก่อนที่เขาจะกลับมา เขาก็ยังตอบคำถามคุณได้เลย แทนที่จะต้องมานั่งจ้องแค่ "${greeting}" แล้วสงสัยว่าเรื่องอะไรกันแน่`,
    everyoneHappy: "ทำได้ตามนี้ - ทุกคนก็แฮปปี้! 🎉",
    halfSerious: "This is kinda only half serious 😬 so please don't get",
    madLink: "mad",
    statusWarning: (greeting) =>
      `That said, if you use this sites URL as someone's status/bio, be prepared to be ignored if you only say "${greeting}!"`,
    createYourOwn: "Create your own at",
    openSource: "Open Source on",
    anotherProject: "another",
    dumbProject: "dumb project",
    by: "by",
    availableIn: "This site is available in:",
    enterGreeting: "Enter a greeting to discourage:",
    generate: "Generate",
    advancedOptions: "Advanced Options",
    senderNameLabel: "Sender Name (optional)",
    senderNamePlaceholder: "e.g., Dawn",
    senderNameHelp: 'The person sending messages in the "Instead try this" example',
    receiverNameLabel: "Receiver Name (optional)",
    receiverNamePlaceholder: "e.g., Kuber",
    receiverNameHelp: "The person receiving messages in the examples",
    yourCustomLink: "Your custom link:",
    previewPage: "Preview your page →",
    tryPopular: "Try these popular greetings:",
    languageLabel: "Language (optional)",
    etc: "etc.",
    chatWaiting: "...?",
    chatQuestion: "เรานัดกันกี่โมงนะ?",
    chatAnswer: "อ๋อ บ่ายสามครึ่งเพื่อน",
    chatGreetingQuestion: (greeting) => `${greeting}! เรานัดกันที่โมงนะ?`,
    chatQuickAnswer: "อ๋อ บ่ายสามครึ่ง",
    chatThanks: "โอเค แล้วเจอกัน!",
    chatAcknowledge: "👌 จัดไป",
  },
  uk: {
    tagline: "будь ласка, не кажіть просто {greeting} в чаті",
    phoneAnalogy: "Уявіть, що ви телефонуєте комусь, кажете {greeting}! а потім ставите їх на очікування... 🤦‍♀️",
    dontDoThis: "Не робіть цього",
    insteadTryThis: "Замість цього спробуйте це",
    noteText: (receiverName) =>
      `Зверніть увагу, що Кіт міг отримати свою відповідь на кілька хвилин раніше і не потрібно було змушувати ${receiverName} чекати. Насправді, ${receiverName} міг відразу почати думати про питання!`,
    politenessText:
      "Люди, які роблять це, зазвичай намагаються бути ввічливими, не переходячи відразу до прохання, як це було б особисто або по телефону - і це чудово! Але зараз 2025 рік, і чат - це ні те, ні інше. Для більшості людей набір тексту набагато повільніший, ніж мова. Тому, незважаючи на найкращі наміри, ви насправді просто змушуєте іншу людину чекати, поки ви формулюєте своє питання, що є втратою продуктивності (і трохи дратує).",
    sameGoesFor: "Те ж саме стосується:",
    areYouAround: "{greeting}, ти тут?",
    quickQuestion: "{greeting} софі - швидке питання.",
    gotASec: "Є секунда?",
    justAskQuestion: "Просто задайте питання! 😫",
    ifBrusque: (greeting) =>
      `Якщо ви вважаєте, що просто сказати "${greeting}" і задати питання трохи різко, ви все одно можете передувати своє повідомлення будь-якою кількістю ввічливостей, які вважаєте за потрібне.`,
    forExample: "Наприклад:",
    exampleLong: (greeting) =>
      `${greeting}! Сподіваюся, у тебе все добре. Мені потрібна остання презентація, коли у тебе буде хвилинка :)`,
    exampleMedium: (greeting) => `${greeting}, як справи? також, є ідея, коли це має бути готово?`,
    exampleShort: (greeting) => `${greeting}, якщо ти не зайнятий, не міг би ти оновити ці NFR?`,
    asyncText: (greeting) =>
      `Це може здатися тривіальним, але задаючи своє питання до отримання цієї першої привітальної відповіді, ви також забезпечуєте асинхронну комунікацію. Якщо інша сторона відсутня, і ви йдете до її повернення, вона все одно може відповісти на ваше питання, замість того щоб просто дивитися на "${greeting}" і гадати, що вона пропустила.`,
    everyoneHappy: "Коли все зроблено правильно - всі щасливі! 🎉",
    halfSerious: "Це лише наполовину серйозно 😬 тому, будь ласка, не",
    madLink: "сердьтеся",
    statusWarning: (greeting) =>
      `Тим не менш, якщо ви використовуєте URL цього сайту як чийсь статус/біо, будьте готові до того, що вас проігнорують, якщо ви скажете лише "${greeting}!"`,
    createYourOwn: "Створіть свій власний на",
    openSource: "Open Source на",
    anotherProject: "ще один",
    dumbProject: "дурний проект",
    by: "від",
    availableIn: "Цей сайт доступний на:",
    enterGreeting: "Введіть привітання, яке потрібно відрадити:",
    generate: "Створити",
    advancedOptions: "Додаткові параметри",
    senderNameLabel: "Ім'я відправника (необов'язково)",
    senderNamePlaceholder: "напр. Dawn",
    senderNameHelp: 'Людина, яка надсилає повідомлення в прикладі "Замість цього спробуйте це"',
    receiverNameLabel: "Ім'я одержувача (необов'язково)",
    receiverNamePlaceholder: "напр. Kuber",
    receiverNameHelp: "Людина, яка отримує повідомлення в прикладах",
    yourCustomLink: "Ваше користувацьке посилання:",
    previewPage: "Попередній перегляд вашої сторінки →",
    tryPopular: "Спробуйте ці популярні привітання:",
    languageLabel: "Мова (необов'язково)",
    etc: "і т.д.",
    chatWaiting: "...?",
    chatQuestion: "о котрій це було?",
    chatAnswer: "ох - 3:30 друже",
    chatGreetingQuestion: (greeting) => `${greeting}! О котрій це було?`,
    chatQuickAnswer: "привіт, 3:30",
    chatThanks: "Дякую - побачимось!",
    chatAcknowledge: "👌 без проблем",
  },
  vi: {
    tagline: "vui lòng đừng chỉ nói {greeting} trong chat",
    phoneAnalogy: "Hãy tưởng tượng gọi điện cho ai đó, nói {greeting}! rồi để họ chờ... 🤦‍♀️",
    dontDoThis: "Đừng làm thế này",
    insteadTryThis: "Thay vào đó hãy thử cách này",
    noteText: (receiverName) =>
      `Lưu ý rằng Keith có thể nhận được câu trả lời sớm hơn vài phút và không cần phải để ${receiverName} chờ đợi. Thực tế, ${receiverName} có thể bắt đầu suy nghĩ về câu hỏi ngay lập tức!`,
    politenessText:
      "Những người làm điều này thường đang cố gắng lịch sự bằng cách không nhảy thẳng vào yêu cầu, như họ sẽ làm trực tiếp hoặc qua điện thoại - và điều đó thật tuyệt! Nhưng đây là năm 2025 và chat không phải là bất kỳ điều nào trong số đó. Đối với hầu hết mọi người, gõ chữ chậm hơn nhiều so với nói. Vì vậy, bất chấp những ý định tốt nhất, bạn thực sự chỉ đang khiến người khác phải chờ đợi để bạn diễn đạt câu hỏi của mình, điều này làm mất năng suất (và hơi khó chịu).",
    sameGoesFor: "Điều tương tự cũng áp dụng cho:",
    areYouAround: "{greeting}, bạn có đó không?",
    quickQuestion: "{greeting} sophie - câu hỏi nhanh.",
    gotASec: "Bạn có một giây không?",
    justAskQuestion: "Chỉ cần hỏi câu hỏi! 😫",
    ifBrusque: (greeting) =>
      `Nếu bạn cảm thấy hơi thô lỗ khi chỉ nói "${greeting}" và hỏi câu hỏi, bạn vẫn có thể mở đầu tin nhắn của mình với bao nhiêu lời xã giao mà bạn thấy phù hợp.`,
    forExample: "Ví dụ:",
    exampleLong: (greeting) => `${greeting}! Hy vọng bạn khỏe. Tôi cần bản trình bày mới nhất, khi bạn có thời gian :)`,
    exampleMedium: (greeting) => `${greeting}, có chuyện gì vậy? ngoài ra, bạn có biết khi nào nó đến hạn không?`,
    exampleShort: (greeting) => `${greeting}, nếu bạn không bận, bạn có thể cập nhật những NFR đó không?`,
    asyncText: (greeting) =>
      `Có thể có vẻ tầm thường, nhưng asking your question before getting that initial salutatory reply also allows for asynchronous communication. If the other party is away, and you leave before they come back, they can still answer your question, instead of just staring at a "${greeting}" and wondering what they missed.`,
    everyoneHappy: "Khi làm đúng - mọi người đều vui! 🎉",
    halfSerious: "Điều này chỉ nghiêm túc một nửa 😬 vì vậy xin đừng",
    madLink: "tức giận",
    statusWarning: (greeting) =>
      `Điều đó nói rằng, nếu bạn sử dụng URL của trang web này làm trạng thái/tiểu sử của ai đó, hãy chuẩn bị để bị bỏ qua nếu bạn chỉ nói "${greeting}!"`,
    createYourOwn: "Tạo của riêng bạn tại",
    openSource: "Mã nguồn mở trên",
    anotherProject: "một",
    dumbProject: "dự án ngớ ngẩn",
    by: "bởi",
    availableIn: "Trang web này có sẵn bằng:",
    enterGreeting: "Nhập lời chào để ngăn cản:",
    generate: "Tạo",
    advancedOptions: "Tùy chọn nâng cao",
    senderNameLabel: "Tên người gửi (tùy chọn)",
    senderNamePlaceholder: "ví dụ Dawn",
    senderNameHelp: 'Người gửi tin nhắn trong ví dụ "Thay vào đó hãy thử cách này"',
    receiverNameLabel: "Tên người nhận (tùy chọn)",
    receiverNamePlaceholder: "ví dụ Kuber",
    receiverNameHelp: "Người nhận tin nhắn trong các ví dụ",
    yourCustomLink: "Liên kết tùy chỉnh của bạn:",
    previewPage: "Xem trước trang của bạn →",
    tryPopular: "Thử những lời chào phổ biến này:",
    languageLabel: "Ngôn ngữ (tùy chọn)",
    etc: "v.v.",
    chatWaiting: "...?",
    chatQuestion: "mấy giờ cái đó nhỉ?",
    chatAnswer: "ồ - 3:30 bạn",
    chatGreetingQuestion: (greeting) => `${greeting}! Mấy giờ cái đó?`,
    chatQuickAnswer: "chào, 3:30",
    chatThanks: "Cảm ơn - hẹn gặp lại!",
    chatAcknowledge: "👌 không sao",
  },
  zh: {
    tagline: "请不要在聊天中只说{greeting}",
    phoneAnalogy: "想象一下给某人打电话，说{greeting}！然后让他们等待... 🤦‍♀️",
    dontDoThis: "不要这样做",
    insteadTryThis: "试试这个",
    noteText: (receiverName) =>
      `请注意，Keith本可以提前几分钟得到答案，而不必让${receiverName}等待。事实上，${receiverName}本可以立即开始思考这个问题！`,
    politenessText:
      "这样做的人通常是想通过不直接提出请求来表示礼貌，就像面对面或通过电话那样 - 这很好！但现在是2025年，聊天不是这些。对于大多数人来说，打字比说话慢得多。因此，尽管有最好的意图，你实际上只是让对方等待你表达你的问题，这是生产力的损失（而且有点烦人）。",
    sameGoesFor: "同样适用于：",
    areYouAround: "{greeting}，你在吗？",
    quickQuestion: "{greeting} sophie - 快速问题。",
    gotASec: "有空吗？",
    justAskQuestion: "直接问问题！😫",
    ifBrusque: (greeting) =>
      `如果你觉得只说"${greeting}"并提问有点唐突，你仍然可以在消息前加上你认为合适的任何礼貌用语。`,
    forExample: "例如：",
    exampleLong: (greeting) => `${greeting}！希望你一切都好。我需要最新的演示文稿，有空的时候 :)`,
    exampleMedium: (greeting) => `${greeting}，怎么样？还有，你知道那个什么时候到期吗？`,
    exampleShort: (greeting) => `${greeting}，如果你不忙，你能更新那些NFR吗？`,
    asyncText: (greeting) =>
      `这可能看起来微不足道，但在获得初始问候回复之前提出你的问题也允许异步通信。如果对方不在，而你在他们回来之前离开，他们仍然可以回答你的问题，而不是只是盯着"${greeting}"并想知道他们错过了什么。`,
    everyoneHappy: "做得对的时候 - 每个人都很开心！🎉",
    halfSerious: "这只是半开玩笑 😬 所以请不要",
    madLink: "生气",
    statusWarning: (greeting) =>
      `话虽如此，如果你将此网站的URL用作某人的状态/简介，请准备好被忽略，如果你只说"${greeting}！"`,
    createYourOwn: "在此创建你自己的",
    openSource: "开源于",
    anotherProject: "另一个",
    dumbProject: "愚蠢的项目",
    by: "由",
    availableIn: "本网站提供以下语言版本：",
    enterGreeting: "输入要阻止的问候语：",
    generate: "生成",
    advancedOptions: "高级选项",
    senderNameLabel: "发送者姓名（可选）",
    senderNamePlaceholder: "例如 Dawn",
    senderNameHelp: '在"试试这个"示例中发送消息的人',
    receiverNameLabel: "接收者姓名（可选）",
    receiverNamePlaceholder: "例如 Kuber",
    receiverNameHelp: "在示例中接收消息的人",
    yourCustomLink: "你的自定义链接：",
    previewPage: "预览你的页面 →",
    tryPopular: "试试这些流行的问候语：",
    languageLabel: "语言（可选）",
    etc: "等等。",
    chatWaiting: "...？",
    chatQuestion: "那个事情是几点来着？",
    chatAnswer: "哦 - 3:30 朋友",
    chatGreetingQuestion: (greeting) => `${greeting}！那个事情是几点？`,
    chatQuickAnswer: "嘿，3:30",
    chatThanks: "谢谢 - 回见！",
    chatAcknowledge: "👌 没问题",
  },
}

export function getTranslation(langCode: string): Translation {
  return translations[langCode] || translations.en
}

export function getLanguage(langCode: string): Language | undefined {
  return languages.find((lang) => lang.code === langCode)
}
